os: linux
dist: bionic
language: python

addons:
  apt:
    packages:
      - gnupg1
      - gnupg2  # For bionic and later, can just be gnupg

env:
  # The gpg2 executable is symlinked to the gpg executable
  # (which seems backwards from what it should be, but I digress...)
  # so we don't need to explicitly specify the GNUPG_BINARY setting,
  # and we also want to ensure that the code works without that setting
  # explicitly set (to bump coverage results without excluding that code).
  - DJANGO_VERSION="Django>=2.2,<3.0" GNUPG_BINARY=/usr/bin/gpg1
  - DJANGO_VERSION="Django>=2.2,<3.0"
  - DJANGO_VERSION="Django>=3.0,<3.1" GNUPG_BINARY=/usr/bin/gpg1
  - DJANGO_VERSION="Django>=3.0,<3.1"
  - DJANGO_VERSION="Django>=3.1,<3.2" GNUPG_BINARY=/usr/bin/gpg1
  - DJANGO_VERSION="Django>=3.1,<3.2"
  - DJANGO_VERSION='https://github.com/django/django/archive/master.tar.gz' GNUPG_BINARY=/usr/bin/gpg1
  - DJANGO_VERSION='https://github.com/django/django/archive/master.tar.gz'

python:
  - "3.6"
  - "3.7"
  - "3.8"

jobs:
  allow_failures:
    - env: DJANGO_VERSION='https://github.com/django/django/archive/master.tar.gz' GNUPG_BINARY=/usr/bin/gpg1
    - env: DJANGO_VERSION='https://github.com/django/django/archive/master.tar.gz'

install:
  - pip install coverage coveralls flake8 python-gnupg
  - pip install "$DJANGO_VERSION"

before_script:
  # Make sure we have gpg installed; this also logs the version of GPG
  - ${GNUPG_BINARY:-gpg} --version
  - mkdir gpg_keyring
script:
  - export PYTHONWARNINGS=all
  - flake8 secure_mail --exclude=secure_mail/migrations
  - coverage run manage.py migrate
  - coverage run manage.py test tests
after_script:
  - coverage combine
  - coveralls
